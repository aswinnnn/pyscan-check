name: 'pyscan'
description: |
  Finds security vulnerabilities in your Python dependencies.

author: 'Aswin (aswinnnn)'

# Marketplace appearance
branding:
  icon: 'shield'
  color: 'green'

inputs:
  path:
    description: 'Directory to scan for vulnerabilities, defaults to current (incase the requirements.txt, pyproject.toml,etc is in a deeper path)'
    required: false
    default: '.'
  
  output-format:
    description: 'Output format for scan results, defaulting to formatted text (.txt, .json)'
    required: false
    default: 'txt'
  
  upload-artifact:
    description: 'Whether to upload scan results as an artifact'
    required: false
    default: 'false'
  
  artifact-name:
    description: 'Name of the uploaded artifact (without the extension)'
    required: false
    default: 'pyscan-results'

outputs:
  scan-result:
    description: 'Optional output file (txt,json) from the scan'
  exit-code:
    description: 'Exit code from pyscan (0 = no issues found)'

runs:
  using: "composite"
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v3.1.4

    - name: Install Pyscan
      shell: bash
      run: |
        echo "Installing pyscan..."
        pip install pyscan-rs

    - name: Debug Repository
      shell: bash
      run: |
        echo "Current directory: $(pwd)"
        echo "Listing files in ${{ inputs.path }}:"
        ls -R ${{ inputs.path }}

    - name: Run Scan
      shell: bash
      run: |
        echo "Starting security scan..."
        pyscan \
          --dir "${{ inputs.path }}" \
          --output "${{ inputs.artifact-name }}.${{ inputs.output-format }}"
        
        SCAN_EXIT_CODE=${PIPESTATUS[0]}

    - name: Upload Artifacts
      if: inputs.upload-artifact == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: "${{ inputs.artifact-name }}.${{ inputs.output-format }}"
        path: "${{ inputs.artifact-name }}.${{ inputs.output-format }}"

